{"ast":null,"code":"import { config } from '../config';\nconst base_url = `${config.server}/inventario`;\n// const base_url = `http://${config.server}:${config.server_port}/inventario`;\n\nexport async function CrearInventario(inventario) {\n  const url = `${base_url}/CrearInventario`;\n  console.log(inventario);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(inventario)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c = CrearInventario;\nexport async function LeerInventarios() {\n  const url = `${base_url}/LeerInventarios`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify()\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c2 = LeerInventarios;\nexport async function LeerInventarioID(id) {\n  const url = `${base_url}/LeerInventarioID`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\n_c3 = LeerInventarioID;\nexport async function ActualizarInventario(inventario) {\n  const url = `${base_url}/ActualizarInventario`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(inventario)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c4 = ActualizarInventario;\nexport async function EliminarInventario(id_inv) {\n  const url = `${base_url}/EliminarInventario`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id_inv\n    })\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c5 = EliminarInventario;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CrearInventario\");\n$RefreshReg$(_c2, \"LeerInventarios\");\n$RefreshReg$(_c3, \"LeerInventarioID\");\n$RefreshReg$(_c4, \"ActualizarInventario\");\n$RefreshReg$(_c5, \"EliminarInventario\");","map":{"version":3,"names":["config","base_url","server","CrearInventario","inventario","url","console","log","response","fetch","method","headers","Accept","body","JSON","stringify","then","result","json","_c","LeerInventarios","_c2","LeerInventarioID","id","ok","Error","_c3","ActualizarInventario","_c4","EliminarInventario","id_inv","_c5","$RefreshReg$"],"sources":["D:/git/Front/src/api/inventario.js"],"sourcesContent":["import { config } from '../config';\r\n\r\nconst base_url = `${config.server}/inventario`;\r\n// const base_url = `http://${config.server}:${config.server_port}/inventario`;\r\n\r\nexport async function CrearInventario(inventario) {\r\n    const url = `${base_url}/CrearInventario`;\r\n    console.log(inventario);\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(inventario)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerInventarios() {\r\n    const url = `${base_url}/LeerInventarios`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify()\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerInventarioID(id) {\r\n    const url = `${base_url}/LeerInventarioID`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\n\r\nexport async function ActualizarInventario(inventario) {\r\n    const url = `${base_url}/ActualizarInventario`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(inventario)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function EliminarInventario(id_inv) {\r\n    const url = `${base_url}/EliminarInventario`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id_inv })\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}