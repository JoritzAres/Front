{"ast":null,"code":"import { config } from '../config';\n\n// const base_url = `${config.server}/Login`;\nconst base_url = `http://${config.server}:${config.server_port}/Login`;\nexport async function LoginUsuario(datos) {\n  const url = `${base_url}/Login`;\n  console.log(datos);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(datos)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c = LoginUsuario;\nexport async function CrearUsuario(datos) {\n  const url = `${base_url}/CrearUsuario`;\n  console.log(datos);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(datos)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c2 = CrearUsuario;\nexport async function LeerSociosActivos() {\n  const url = `${base_url}/LeerSociosActivos`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify()\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c3 = LeerSociosActivos;\nexport async function LeerUsuario() {\n  const url = `${base_url}/LeerUsuario`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify()\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c4 = LeerUsuario;\nexport async function LeerUsuarioID(Dni) {\n  const url = `${base_url}/LeerUsuarioID`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      Dni: Dni\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\n_c5 = LeerUsuarioID;\nexport async function LeerUsuarioNS(N_socio) {\n  const url = `${base_url}/LeerUsuarioNS`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      N_socio: N_socio\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\n\n// export async function ActualizarUsuario(Usuario) {\n//     console.log(Usuario);\n//     const url = `${base_url}/ActualizarUsuario`;\n//     const response = await fetch(url, {\n//         method: 'POST',\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify(Usuario)\n//     })\n//         .then(result => {\n//             return result.json();\n//         }).then(response => {\n//             console.log(\"Response -->\", response);\n//             return response;\n//         });\n//     return response;\n// }\n_c6 = LeerUsuarioNS;\nexport async function ActualizarUsuario(Usuario) {\n  console.log(Usuario);\n  const url = `${base_url}/ActualizarUsuario`;\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(Usuario)\n    });\n\n    // AsegÃºrate de que la respuesta sea OK antes de intentar parsear como JSON\n    if (response.ok) {\n      return await response.json();\n    } else {\n      // Si la respuesta no es OK, imprime el texto para depurar\n      const errorText = await response.text();\n      console.error(\"Error response:\", errorText);\n      throw new Error(`Server responded with status: ${response.status}`);\n    }\n  } catch (error) {\n    console.error(\"Error en ActualizarUsuario:\", error);\n    throw error; // Relanzar el error para manejarlo en la UI si es necesario\n  }\n}\n_c7 = ActualizarUsuario;\nexport async function EliminarUsuario(id) {\n  const url = `${base_url}/EliminarUsuario`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: id\n    })\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c8 = EliminarUsuario;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"LoginUsuario\");\n$RefreshReg$(_c2, \"CrearUsuario\");\n$RefreshReg$(_c3, \"LeerSociosActivos\");\n$RefreshReg$(_c4, \"LeerUsuario\");\n$RefreshReg$(_c5, \"LeerUsuarioID\");\n$RefreshReg$(_c6, \"LeerUsuarioNS\");\n$RefreshReg$(_c7, \"ActualizarUsuario\");\n$RefreshReg$(_c8, \"EliminarUsuario\");","map":{"version":3,"names":["config","base_url","server","server_port","LoginUsuario","datos","url","console","log","response","fetch","method","headers","Accept","body","JSON","stringify","then","result","json","_c","CrearUsuario","_c2","LeerSociosActivos","_c3","LeerUsuario","_c4","LeerUsuarioID","Dni","ok","Error","_c5","LeerUsuarioNS","N_socio","_c6","ActualizarUsuario","Usuario","errorText","text","error","status","_c7","EliminarUsuario","id","_c8","$RefreshReg$"],"sources":["D:/git/Front/src/api/login.js"],"sourcesContent":["import { config } from '../config';\r\n\r\n// const base_url = `${config.server}/Login`;\r\nconst base_url = `http://${config.server}:${config.server_port}/Login`;\r\n\r\nexport async function LoginUsuario(datos) {\r\n    const url = `${base_url}/Login`;\r\n    console.log(datos);\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(datos)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\nexport async function CrearUsuario(datos) {\r\n    const url = `${base_url}/CrearUsuario`;\r\n    console.log(datos);\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(datos)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerSociosActivos() {\r\n    const url = `${base_url}/LeerSociosActivos`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify()\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerUsuario() {\r\n    const url = `${base_url}/LeerUsuario`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify()\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerUsuarioID(Dni) {\r\n    const url = `${base_url}/LeerUsuarioID`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ Dni: Dni })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n\r\n    return response.json();\r\n}\r\nexport async function LeerUsuarioNS(N_socio) {\r\n    const url = `${base_url}/LeerUsuarioNS`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ N_socio: N_socio })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\n// export async function ActualizarUsuario(Usuario) {\r\n//     console.log(Usuario);\r\n//     const url = `${base_url}/ActualizarUsuario`;\r\n//     const response = await fetch(url, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//             Accept: \"application/json\",\r\n//             \"Content-Type\": \"application/json\"\r\n//         },\r\n//         body: JSON.stringify(Usuario)\r\n//     })\r\n//         .then(result => {\r\n//             return result.json();\r\n//         }).then(response => {\r\n//             console.log(\"Response -->\", response);\r\n//             return response;\r\n//         });\r\n//     return response;\r\n// }\r\n    export async function ActualizarUsuario(Usuario) {\r\n        console.log(Usuario);\r\n        const url = `${base_url}/ActualizarUsuario`;\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(Usuario)\r\n            });\r\n\r\n            // AsegÃºrate de que la respuesta sea OK antes de intentar parsear como JSON\r\n            if (response.ok) {\r\n                return await response.json();\r\n            } else {\r\n                // Si la respuesta no es OK, imprime el texto para depurar\r\n                const errorText = await response.text();\r\n                console.error(\"Error response:\", errorText);\r\n                throw new Error(`Server responded with status: ${response.status}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error en ActualizarUsuario:\", error);\r\n            throw error; // Relanzar el error para manejarlo en la UI si es necesario\r\n        }\r\n    }\r\nexport async function EliminarUsuario(id) {\r\n    const url = `${base_url}/EliminarUsuario`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id: id })\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}