{"ast":null,"code":"import { config } from '../config';\n\n// const base_url = `${config.server}/contactos`;\nconst base_url = `http://${config.server}:${config.server_port}/contactos`;\nexport async function CrearContacto(contacto) {\n  const url = `${base_url}/CrearContacto`;\n  console.log(contacto);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(contacto)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c = CrearContacto;\nexport async function LeerContactos() {\n  const url = `${base_url}/LeerContactos`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify()\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c2 = LeerContactos;\nexport async function LeerContactosID(ID) {\n  const url = `${base_url}/LeerContactosID`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ID: ID\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\n_c3 = LeerContactosID;\nexport async function EliminarContacto(contactoSeleccionado) {\n  const url = `${base_url}/EliminarContacto`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      contactoSeleccionado: contactoSeleccionado\n    })\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c4 = EliminarContacto;\nexport async function ActualizarContacto(contacto) {\n  const url = `${base_url}/ActualizarContacto`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(contacto)\n  }).then(result => {\n    return result.json();\n  }).then(response => {\n    console.log(\"Response -->\", response);\n    return response;\n  });\n  return response;\n}\n_c5 = ActualizarContacto;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CrearContacto\");\n$RefreshReg$(_c2, \"LeerContactos\");\n$RefreshReg$(_c3, \"LeerContactosID\");\n$RefreshReg$(_c4, \"EliminarContacto\");\n$RefreshReg$(_c5, \"ActualizarContacto\");","map":{"version":3,"names":["config","base_url","server","server_port","CrearContacto","contacto","url","console","log","response","fetch","method","headers","Accept","body","JSON","stringify","then","result","json","_c","LeerContactos","_c2","LeerContactosID","ID","ok","Error","_c3","EliminarContacto","contactoSeleccionado","_c4","ActualizarContacto","_c5","$RefreshReg$"],"sources":["D:/git/Front/src/api/contactos.js"],"sourcesContent":["import { config } from '../config';\r\n\r\n// const base_url = `${config.server}/contactos`;\r\nconst base_url = `http://${config.server}:${config.server_port}/contactos`;\r\nexport async function CrearContacto(contacto) {\r\n    const url = `${base_url}/CrearContacto`;\r\n    console.log(contacto);\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(contacto)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerContactos() {\r\n    const url = `${base_url}/LeerContactos`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify()\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport async function LeerContactosID(ID) {\r\n    const url = `${base_url}/LeerContactosID`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ ID:ID })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\nexport async function EliminarContacto(contactoSeleccionado) {\r\n    const url = `${base_url}/EliminarContacto`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({contactoSeleccionado : contactoSeleccionado})\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}\r\nexport async function ActualizarContacto(contacto) {\r\n    const url = `${base_url}/ActualizarContacto`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(contacto)\r\n    })\r\n        .then(result => {\r\n            return result.json();\r\n        }).then(response => {\r\n            console.log(\"Response -->\", response);\r\n            return response;\r\n        });\r\n    return response;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}